Search.setIndex({"docnames": ["contributor_guide/index", "index", "reference/constants", "reference/generated/isopt.my_func", "reference/generated/isopt.optimizers.AutoAcceptSA", "reference/generated/isopt.optimizers.BaseOptimizer", "reference/generated/isopt.optimizers.SimulatedAnnealing", "reference/generated/isopt.optimizers.StandardSA", "reference/index", "reference/optimizers", "user_guide/index"], "filenames": ["contributor_guide/index.rst", "index.rst", "reference/constants.rst", "reference/generated/isopt.my_func.rst", "reference/generated/isopt.optimizers.AutoAcceptSA.rst", "reference/generated/isopt.optimizers.BaseOptimizer.rst", "reference/generated/isopt.optimizers.SimulatedAnnealing.rst", "reference/generated/isopt.optimizers.StandardSA.rst", "reference/index.rst", "reference/optimizers.rst", "user_guide/index.rst"], "titles": ["&lt;no title&gt;", "Welcome to isopt\u2019s documentation!", "Constants", "isopt.my_func", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">isopt.optimizers</span></code>.AutoAcceptSA", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">isopt.optimizers</span></code>.BaseOptimizer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">isopt.optimizers</span></code>.SimulatedAnnealing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">isopt.optimizers</span></code>.StandardSA", "Isopt Reference", "Optimizers", "&lt;no title&gt;"], "terms": {"user": [1, 7], "guid": 1, "The": [1, 8], "provid": [1, 6], "depth": 1, "inform": [1, 8], "kei": 1, "concept": 1, "aksara": [1, 8], "To": 1, "api": 1, "refer": 1, "detail": [1, 8], "descript": 1, "public": [1, 8], "librari": 1, "describ": 1, "how": 1, "method": [1, 4, 5, 6, 7, 8], "work": 1, "which": [1, 4, 6, 7], "paramet": [1, 3, 4, 5, 6, 7], "can": [1, 8], "us": [1, 4, 6, 7], "contributor": 1, "find": 1, "bug": 1, "want": 1, "fix": 1, "improv": 1, "model": 1, "thi": [1, 4, 5, 6, 7, 8], "contibutor": 1, "extract": 2, "lemma": 2, "form": 2, "from": [2, 4, 6, 7, 8], "string": 2, "list": 2, "sourc": [3, 4, 5, 6, 7], "add": 3, "1": 3, "int": [3, 4, 5, 6, 7], "number": [3, 4, 7], "investig": 3, "return": [3, 4, 5, 6, 7], "b": 3, "ad": 3, "class": [4, 5, 6, 7, 8], "energy_func": [4, 5, 6, 7], "start_stat": [4, 6, 7], "mover": [4, 6, 7], "track_traj": [4, 6, 7], "true": [4, 5, 6, 7], "accept_init": 4, "0": [4, 6, 7], "8": 4, "accept_fin": 4, "05": 4, "n_step": [4, 7], "5000": 4, "accept_eval_sample_n": 4, "100": 4, "decai": 4, "5": 4, "kwarg": [4, 5, 6, 7], "simul": [4, 6, 7], "anneal": [4, 6, 7], "algorithm": [4, 6, 7], "sampl": 4, "state": [4, 5, 6, 7], "start": [4, 6, 7], "automat": 4, "calcul": [4, 7], "temperatur": [4, 7], "gradient": [4, 7], "callabl": [4, 5, 6, 7], "fitness_func": [4, 6, 7], "search": [4, 6, 7], "when": [4, 6, 7], "call": [4, 6, 7], "take": [4, 6, 7], "neighbor": [4, 6, 7], "t_init": [4, 7], "float": [4, 5, 6, 7], "run": [4, 6, 7], "i": [4, 5, 6, 7], "initi": [4, 7], "t_fin": [4, 7], "final": [4, 7], "step": [4, 7], "bool": [4, 5, 6, 7], "determin": [4, 6, 7], "whether": [4, 6, 7], "energi": [4, 5, 6, 7], "fit": [4, 6, 7], "trajectori": [4, 6, 7], "track": [4, 6, 7], "dure": [4, 6, 7], "plot_trajectori": [4, 6, 7], "logspac": [4, 7], "If": [4, 6, 7], "log": [4, 7], "space": [4, 7], "appli": [4, 7], "otherwis": [4, 7], "linear": [4, 7], "stuff": [4, 6, 7], "dry_run": 4, "calc_tim": 4, "perform": 4, "dry": 4, "time": 4, "print": 4, "out": 4, "an": [4, 5], "estim": 4, "get_param": 4, "get": 4, "all": [4, 5], "param": 4, "associ": 4, "dict": 4, "need": 4, "reconstruct": 4, "includ": 4, "so": 4, "must": 4, "complet": 4, "befor": 4, "save": [4, 6, 7], "classmethod": 4, "load_from_param": 4, "gener": 4, "dictionari": 4, "format": 4, "output": 4, "save_param": 4, "load": 4, "load_from_params_fil": 4, "file_nam": 4, "pickl": 4, "file": 4, "contain": [4, 8], "str": [4, 6, 7], "name": 4, "object": 4, "seed": [4, 6, 7], "default": [4, 6, 7], "random": [4, 6, 7], "pass": [4, 6, 7], "numpi": [4, 6, 7], "best_stat": [4, 5, 6, 7], "best": [4, 6, 7], "found": [4, 6, 7], "across": [4, 6, 7], "whole": [4, 6, 7], "sa": [4, 6, 7], "best_energi": [4, 5, 6, 7], "plot_temp_grad": 4, "savefig_nam": [4, 6, 7], "none": [4, 6, 7], "plot": [4, 6, 7], "accept": 4, "de": 4, "troubleshoot": 4, "png": 4, "figur": 4, "over": [4, 6, 7], "cour": [4, 6, 7], "displai": [4, 6, 7], "plt": [4, 6, 7], "show": [4, 6, 7], "under": [4, 6, 7], "prefix": 4, "minimum": 5, "constraint": 5, "base": [5, 6, 8], "other": 5, "function": [5, 8], "minim": 5, "maxim": 5, "given": 5, "fals": 5, "abstract": [5, 6], "specifi": [5, 7], "child": 5, "someth": 5, "runner": 6, "A": 6, "should": 6, "__init__": 6, "_hasnext": 6, "_next": 6, "In": 8, "page": 8, "each": 8, "have": 8, "been": 8, "categor": 8, "its": 8, "e": 8, "g": 8, "token": 8, "major": 8, "access": 8, "directli": 8, "modul": 8, "import": 8, "lemmat": 8, "constant": 8, "optim": 8, "baseoptim": 8, "simulatedann": 8, "standardsa": 8, "autoacceptsa": 8}, "objects": {"": [[8, 0, 0, "-", "isopt"]], "isopt": [[3, 1, 1, "", "my_func"]], "isopt.optimizers": [[4, 2, 1, "", "AutoAcceptSA"], [5, 2, 1, "", "BaseOptimizer"], [6, 2, 1, "", "SimulatedAnnealing"], [7, 2, 1, "", "StandardSA"]], "isopt.optimizers.AutoAcceptSA": [[4, 3, 1, "", "dry_run"], [4, 3, 1, "", "get_params"], [4, 3, 1, "", "load_from_params"], [4, 3, 1, "", "load_from_params_file"], [4, 3, 1, "", "optimize"], [4, 3, 1, "", "plot_temp_grad"], [4, 3, 1, "", "plot_trajectory"], [4, 3, 1, "", "save_params"]], "isopt.optimizers.BaseOptimizer": [[5, 3, 1, "", "optimize"]], "isopt.optimizers.SimulatedAnnealing": [[6, 3, 1, "", "optimize"], [6, 3, 1, "", "plot_trajectory"]], "isopt.optimizers.StandardSA": [[7, 3, 1, "", "optimize"], [7, 3, 1, "", "plot_trajectory"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"welcom": 1, "isopt": [1, 3, 4, 5, 6, 7, 8], "": 1, "document": 1, "constant": 2, "my_func": 3, "optim": [4, 5, 6, 7, 9], "autoacceptsa": 4, "baseoptim": 5, "simulatedann": 6, "standardsa": 7, "refer": 8}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to isopt\u2019s documentation!": [[1, "welcome-to-isopt-s-documentation"]], "Constants": [[2, "constants"], [2, "id2"]], "isopt.my_func": [[3, "isopt-my-func"]], "isopt.optimizers.AutoAcceptSA": [[4, "isopt-optimizers-autoacceptsa"]], "isopt.optimizers.BaseOptimizer": [[5, "isopt-optimizers-baseoptimizer"]], "isopt.optimizers.SimulatedAnnealing": [[6, "isopt-optimizers-simulatedannealing"]], "isopt.optimizers.StandardSA": [[7, "isopt-optimizers-standardsa"]], "Isopt Reference": [[8, "isopt-reference"]], "Optimizers": [[9, "optimizers"]]}, "indexentries": {"my_func() (in module isopt)": [[3, "isopt.my_func"]], "autoacceptsa (class in isopt.optimizers)": [[4, "isopt.optimizers.AutoAcceptSA"]], "dry_run() (isopt.optimizers.autoacceptsa method)": [[4, "isopt.optimizers.AutoAcceptSA.dry_run"]], "get_params() (isopt.optimizers.autoacceptsa method)": [[4, "isopt.optimizers.AutoAcceptSA.get_params"]], "load_from_params() (isopt.optimizers.autoacceptsa class method)": [[4, "isopt.optimizers.AutoAcceptSA.load_from_params"]], "load_from_params_file() (isopt.optimizers.autoacceptsa class method)": [[4, "isopt.optimizers.AutoAcceptSA.load_from_params_file"]], "optimize() (isopt.optimizers.autoacceptsa method)": [[4, "isopt.optimizers.AutoAcceptSA.optimize"]], "plot_temp_grad() (isopt.optimizers.autoacceptsa method)": [[4, "isopt.optimizers.AutoAcceptSA.plot_temp_grad"]], "plot_trajectory() (isopt.optimizers.autoacceptsa method)": [[4, "isopt.optimizers.AutoAcceptSA.plot_trajectory"]], "save_params() (isopt.optimizers.autoacceptsa method)": [[4, "isopt.optimizers.AutoAcceptSA.save_params"]], "baseoptimizer (class in isopt.optimizers)": [[5, "isopt.optimizers.BaseOptimizer"]], "optimize() (isopt.optimizers.baseoptimizer method)": [[5, "isopt.optimizers.BaseOptimizer.optimize"]], "simulatedannealing (class in isopt.optimizers)": [[6, "isopt.optimizers.SimulatedAnnealing"]], "optimize() (isopt.optimizers.simulatedannealing method)": [[6, "isopt.optimizers.SimulatedAnnealing.optimize"]], "plot_trajectory() (isopt.optimizers.simulatedannealing method)": [[6, "isopt.optimizers.SimulatedAnnealing.plot_trajectory"]], "standardsa (class in isopt.optimizers)": [[7, "isopt.optimizers.StandardSA"]], "optimize() (isopt.optimizers.standardsa method)": [[7, "isopt.optimizers.StandardSA.optimize"]], "plot_trajectory() (isopt.optimizers.standardsa method)": [[7, "isopt.optimizers.StandardSA.plot_trajectory"]], "isopt": [[8, "module-isopt"]], "module": [[8, "module-isopt"]]}})